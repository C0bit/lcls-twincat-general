<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="FB_DataBuffer" Id="{663bb4ee-ee74-4dfb-9a41-308201d6b012}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_DataBuffer
(*
	Function Block to accumulate data into an array.
	
	Requires the user to supply pointers to two arrays:
	1. A partial buffer that we will slowly fill one value at a time
	2. An output buffer that will only update when the partial buffer is full
	
	Take great care of the following, or else your program will likely crash:
	1. The input type and array types must match
	2. The provided element count must be accurate and match both arrays
	
	As this function block as no way of checking that you did this correctly.
*)
VAR_INPUT
	// Whether or not to accumulate on this cycle
	bExecute: BOOL;
	// The value to accumulate
	aInput: ANY;
	// Number of values in the output array
	iElemCount: UDINT;
	// Address of the rolling buffer to be filled every cycle
	pPartialAdr: PVOID;
	// Address of the output buffer to be filled when the rolling buffer is full
	pOutputAdr: PVOID;
END_VAR
VAR
	bInit: BOOL := FALSE;
	iInputSize: UINT;
	iArrayIndex: UDINT := 0;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInit THEN
	bInit := TRUE;
	iInputSize := SIZEOF(aInput);
END_IF
IF bExecute THEN
	MEMCPY(
		destAddr := pPartialAdr + iArrayIndex*SIZEOF(aInput),
		srcAddr := ADR(aInput),
		n := SIZEOF(aInput));
	iArrayIndex := iArrayIndex + 1;
	IF iArrayIndex >= iElemCount THEN
		MEMCPY(
			destAddr := pOutputAdr,
			srcAddr := pPartialAdr,
			n := iElemCount*SIZEOF(aInput));
		iArrayIndex := 0;
	END_IF
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>